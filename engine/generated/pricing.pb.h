// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: pricing.proto
// Protobuf C++ Version: 6.30.2

#ifndef pricing_2eproto_2epb_2eh
#define pricing_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_pricing_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_pricing_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_pricing_2eproto;
}  // extern "C"
namespace engine {
class CalculatedFairValue;
struct CalculatedFairValueDefaultTypeInternal;
extern CalculatedFairValueDefaultTypeInternal _CalculatedFairValue_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CalculatedFairValue_class_data_;
class NormalizedItemPricing;
struct NormalizedItemPricingDefaultTypeInternal;
extern NormalizedItemPricingDefaultTypeInternal _NormalizedItemPricing_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NormalizedItemPricing_class_data_;
class OrderbookFairValues;
struct OrderbookFairValuesDefaultTypeInternal;
extern OrderbookFairValuesDefaultTypeInternal _OrderbookFairValues_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull OrderbookFairValues_class_data_;
class UpdatedPrices;
struct UpdatedPricesDefaultTypeInternal;
extern UpdatedPricesDefaultTypeInternal _UpdatedPrices_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UpdatedPrices_class_data_;
}  // namespace engine
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace engine {

// ===================================================================


// -------------------------------------------------------------------

class NormalizedItemPricing final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:engine.NormalizedItemPricing) */ {
 public:
  inline NormalizedItemPricing() : NormalizedItemPricing(nullptr) {}
  ~NormalizedItemPricing() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NormalizedItemPricing* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NormalizedItemPricing));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NormalizedItemPricing(::google::protobuf::internal::ConstantInitialized);

  inline NormalizedItemPricing(const NormalizedItemPricing& from) : NormalizedItemPricing(nullptr, from) {}
  inline NormalizedItemPricing(NormalizedItemPricing&& from) noexcept
      : NormalizedItemPricing(nullptr, std::move(from)) {}
  inline NormalizedItemPricing& operator=(const NormalizedItemPricing& from) {
    CopyFrom(from);
    return *this;
  }
  inline NormalizedItemPricing& operator=(NormalizedItemPricing&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NormalizedItemPricing& default_instance() {
    return *reinterpret_cast<const NormalizedItemPricing*>(
        &_NormalizedItemPricing_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(NormalizedItemPricing& a, NormalizedItemPricing& b) { a.Swap(&b); }
  inline void Swap(NormalizedItemPricing* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NormalizedItemPricing* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NormalizedItemPricing* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NormalizedItemPricing>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NormalizedItemPricing& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NormalizedItemPricing& from) { NormalizedItemPricing::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NormalizedItemPricing* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "engine.NormalizedItemPricing"; }

 protected:
  explicit NormalizedItemPricing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NormalizedItemPricing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NormalizedItemPricing& from);
  NormalizedItemPricing(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NormalizedItemPricing&& from) noexcept
      : NormalizedItemPricing(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMarketHashNameFieldNumber = 1,
    kMarketSourceFieldNumber = 3,
    kItemPriceFieldNumber = 2,
  };
  // string market_hash_name = 1;
  void clear_market_hash_name() ;
  const std::string& market_hash_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_market_hash_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_market_hash_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_market_hash_name();
  void set_allocated_market_hash_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_market_hash_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_hash_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_market_hash_name();

  public:
  // string market_source = 3;
  void clear_market_source() ;
  const std::string& market_source() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_market_source(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_market_source();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_market_source();
  void set_allocated_market_source(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_market_source() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_source(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_market_source();

  public:
  // double item_price = 2;
  void clear_item_price() ;
  double item_price() const;
  void set_item_price(double value);

  private:
  double _internal_item_price() const;
  void _internal_set_item_price(double value);

  public:
  // @@protoc_insertion_point(class_scope:engine.NormalizedItemPricing)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NormalizedItemPricing& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr market_hash_name_;
    ::google::protobuf::internal::ArenaStringPtr market_source_;
    double item_price_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pricing_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NormalizedItemPricing_class_data_;
// -------------------------------------------------------------------

class CalculatedFairValue final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:engine.CalculatedFairValue) */ {
 public:
  inline CalculatedFairValue() : CalculatedFairValue(nullptr) {}
  ~CalculatedFairValue() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CalculatedFairValue* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CalculatedFairValue));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CalculatedFairValue(::google::protobuf::internal::ConstantInitialized);

  inline CalculatedFairValue(const CalculatedFairValue& from) : CalculatedFairValue(nullptr, from) {}
  inline CalculatedFairValue(CalculatedFairValue&& from) noexcept
      : CalculatedFairValue(nullptr, std::move(from)) {}
  inline CalculatedFairValue& operator=(const CalculatedFairValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalculatedFairValue& operator=(CalculatedFairValue&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalculatedFairValue& default_instance() {
    return *reinterpret_cast<const CalculatedFairValue*>(
        &_CalculatedFairValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CalculatedFairValue& a, CalculatedFairValue& b) { a.Swap(&b); }
  inline void Swap(CalculatedFairValue* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalculatedFairValue* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalculatedFairValue* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CalculatedFairValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CalculatedFairValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CalculatedFairValue& from) { CalculatedFairValue::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CalculatedFairValue* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "engine.CalculatedFairValue"; }

 protected:
  explicit CalculatedFairValue(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CalculatedFairValue(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CalculatedFairValue& from);
  CalculatedFairValue(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CalculatedFairValue&& from) noexcept
      : CalculatedFairValue(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemIdFieldNumber = 1,
    kFairValueFieldNumber = 2,
  };
  // string item_id = 1;
  void clear_item_id() ;
  const std::string& item_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_item_id(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_item_id();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_item_id();
  void set_allocated_item_id(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_item_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_item_id(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_item_id();

  public:
  // double fair_value = 2;
  void clear_fair_value() ;
  double fair_value() const;
  void set_fair_value(double value);

  private:
  double _internal_fair_value() const;
  void _internal_set_fair_value(double value);

  public:
  // @@protoc_insertion_point(class_scope:engine.CalculatedFairValue)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 42,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CalculatedFairValue& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr item_id_;
    double fair_value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pricing_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CalculatedFairValue_class_data_;
// -------------------------------------------------------------------

class UpdatedPrices final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:engine.UpdatedPrices) */ {
 public:
  inline UpdatedPrices() : UpdatedPrices(nullptr) {}
  ~UpdatedPrices() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdatedPrices* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdatedPrices));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdatedPrices(::google::protobuf::internal::ConstantInitialized);

  inline UpdatedPrices(const UpdatedPrices& from) : UpdatedPrices(nullptr, from) {}
  inline UpdatedPrices(UpdatedPrices&& from) noexcept
      : UpdatedPrices(nullptr, std::move(from)) {}
  inline UpdatedPrices& operator=(const UpdatedPrices& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdatedPrices& operator=(UpdatedPrices&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdatedPrices& default_instance() {
    return *reinterpret_cast<const UpdatedPrices*>(
        &_UpdatedPrices_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(UpdatedPrices& a, UpdatedPrices& b) { a.Swap(&b); }
  inline void Swap(UpdatedPrices* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdatedPrices* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdatedPrices* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdatedPrices>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdatedPrices& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdatedPrices& from) { UpdatedPrices::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdatedPrices* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "engine.UpdatedPrices"; }

 protected:
  explicit UpdatedPrices(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UpdatedPrices(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UpdatedPrices& from);
  UpdatedPrices(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UpdatedPrices&& from) noexcept
      : UpdatedPrices(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPricesFieldNumber = 1,
  };
  // repeated .engine.NormalizedItemPricing prices = 1;
  int prices_size() const;
  private:
  int _internal_prices_size() const;

  public:
  void clear_prices() ;
  ::engine::NormalizedItemPricing* PROTOBUF_NONNULL mutable_prices(int index);
  ::google::protobuf::RepeatedPtrField<::engine::NormalizedItemPricing>* PROTOBUF_NONNULL mutable_prices();

  private:
  const ::google::protobuf::RepeatedPtrField<::engine::NormalizedItemPricing>& _internal_prices() const;
  ::google::protobuf::RepeatedPtrField<::engine::NormalizedItemPricing>* PROTOBUF_NONNULL _internal_mutable_prices();
  public:
  const ::engine::NormalizedItemPricing& prices(int index) const;
  ::engine::NormalizedItemPricing* PROTOBUF_NONNULL add_prices();
  const ::google::protobuf::RepeatedPtrField<::engine::NormalizedItemPricing>& prices() const;
  // @@protoc_insertion_point(class_scope:engine.UpdatedPrices)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UpdatedPrices& from_msg);
    ::google::protobuf::RepeatedPtrField< ::engine::NormalizedItemPricing > prices_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pricing_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UpdatedPrices_class_data_;
// -------------------------------------------------------------------

class OrderbookFairValues final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:engine.OrderbookFairValues) */ {
 public:
  inline OrderbookFairValues() : OrderbookFairValues(nullptr) {}
  ~OrderbookFairValues() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderbookFairValues* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderbookFairValues));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderbookFairValues(::google::protobuf::internal::ConstantInitialized);

  inline OrderbookFairValues(const OrderbookFairValues& from) : OrderbookFairValues(nullptr, from) {}
  inline OrderbookFairValues(OrderbookFairValues&& from) noexcept
      : OrderbookFairValues(nullptr, std::move(from)) {}
  inline OrderbookFairValues& operator=(const OrderbookFairValues& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderbookFairValues& operator=(OrderbookFairValues&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderbookFairValues& default_instance() {
    return *reinterpret_cast<const OrderbookFairValues*>(
        &_OrderbookFairValues_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(OrderbookFairValues& a, OrderbookFairValues& b) { a.Swap(&b); }
  inline void Swap(OrderbookFairValues* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderbookFairValues* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderbookFairValues* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderbookFairValues>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderbookFairValues& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderbookFairValues& from) { OrderbookFairValues::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderbookFairValues* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "engine.OrderbookFairValues"; }

 protected:
  explicit OrderbookFairValues(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  OrderbookFairValues(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const OrderbookFairValues& from);
  OrderbookFairValues(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, OrderbookFairValues&& from) noexcept
      : OrderbookFairValues(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFairValuesFieldNumber = 1,
  };
  // repeated .engine.CalculatedFairValue fair_values = 1;
  int fair_values_size() const;
  private:
  int _internal_fair_values_size() const;

  public:
  void clear_fair_values() ;
  ::engine::CalculatedFairValue* PROTOBUF_NONNULL mutable_fair_values(int index);
  ::google::protobuf::RepeatedPtrField<::engine::CalculatedFairValue>* PROTOBUF_NONNULL mutable_fair_values();

  private:
  const ::google::protobuf::RepeatedPtrField<::engine::CalculatedFairValue>& _internal_fair_values() const;
  ::google::protobuf::RepeatedPtrField<::engine::CalculatedFairValue>* PROTOBUF_NONNULL _internal_mutable_fair_values();
  public:
  const ::engine::CalculatedFairValue& fair_values(int index) const;
  ::engine::CalculatedFairValue* PROTOBUF_NONNULL add_fair_values();
  const ::google::protobuf::RepeatedPtrField<::engine::CalculatedFairValue>& fair_values() const;
  // @@protoc_insertion_point(class_scope:engine.OrderbookFairValues)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const OrderbookFairValues& from_msg);
    ::google::protobuf::RepeatedPtrField< ::engine::CalculatedFairValue > fair_values_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pricing_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull OrderbookFairValues_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// NormalizedItemPricing

// string market_hash_name = 1;
inline void NormalizedItemPricing::clear_market_hash_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_hash_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NormalizedItemPricing::market_hash_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:engine.NormalizedItemPricing.market_hash_name)
  return _internal_market_hash_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NormalizedItemPricing::set_market_hash_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_hash_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:engine.NormalizedItemPricing.market_hash_name)
}
inline std::string* PROTOBUF_NONNULL NormalizedItemPricing::mutable_market_hash_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_market_hash_name();
  // @@protoc_insertion_point(field_mutable:engine.NormalizedItemPricing.market_hash_name)
  return _s;
}
inline const std::string& NormalizedItemPricing::_internal_market_hash_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_hash_name_.Get();
}
inline void NormalizedItemPricing::_internal_set_market_hash_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_hash_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL NormalizedItemPricing::_internal_mutable_market_hash_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.market_hash_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE NormalizedItemPricing::release_market_hash_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:engine.NormalizedItemPricing.market_hash_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.market_hash_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_hash_name_.Set("", GetArena());
  }
  return released;
}
inline void NormalizedItemPricing::set_allocated_market_hash_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.market_hash_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_hash_name_.IsDefault()) {
    _impl_.market_hash_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:engine.NormalizedItemPricing.market_hash_name)
}

// double item_price = 2;
inline void NormalizedItemPricing::clear_item_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_price_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double NormalizedItemPricing::item_price() const {
  // @@protoc_insertion_point(field_get:engine.NormalizedItemPricing.item_price)
  return _internal_item_price();
}
inline void NormalizedItemPricing::set_item_price(double value) {
  _internal_set_item_price(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:engine.NormalizedItemPricing.item_price)
}
inline double NormalizedItemPricing::_internal_item_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_price_;
}
inline void NormalizedItemPricing::_internal_set_item_price(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_price_ = value;
}

// string market_source = 3;
inline void NormalizedItemPricing::clear_market_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_source_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& NormalizedItemPricing::market_source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:engine.NormalizedItemPricing.market_source)
  return _internal_market_source();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NormalizedItemPricing::set_market_source(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.market_source_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:engine.NormalizedItemPricing.market_source)
}
inline std::string* PROTOBUF_NONNULL NormalizedItemPricing::mutable_market_source()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_market_source();
  // @@protoc_insertion_point(field_mutable:engine.NormalizedItemPricing.market_source)
  return _s;
}
inline const std::string& NormalizedItemPricing::_internal_market_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_source_.Get();
}
inline void NormalizedItemPricing::_internal_set_market_source(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.market_source_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL NormalizedItemPricing::_internal_mutable_market_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.market_source_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE NormalizedItemPricing::release_market_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:engine.NormalizedItemPricing.market_source)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.market_source_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_source_.Set("", GetArena());
  }
  return released;
}
inline void NormalizedItemPricing::set_allocated_market_source(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.market_source_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_source_.IsDefault()) {
    _impl_.market_source_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:engine.NormalizedItemPricing.market_source)
}

// -------------------------------------------------------------------

// UpdatedPrices

// repeated .engine.NormalizedItemPricing prices = 1;
inline int UpdatedPrices::_internal_prices_size() const {
  return _internal_prices().size();
}
inline int UpdatedPrices::prices_size() const {
  return _internal_prices_size();
}
inline void UpdatedPrices::clear_prices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prices_.Clear();
}
inline ::engine::NormalizedItemPricing* PROTOBUF_NONNULL UpdatedPrices::mutable_prices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:engine.UpdatedPrices.prices)
  return _internal_mutable_prices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::engine::NormalizedItemPricing>* PROTOBUF_NONNULL UpdatedPrices::mutable_prices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:engine.UpdatedPrices.prices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_prices();
}
inline const ::engine::NormalizedItemPricing& UpdatedPrices::prices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:engine.UpdatedPrices.prices)
  return _internal_prices().Get(index);
}
inline ::engine::NormalizedItemPricing* PROTOBUF_NONNULL UpdatedPrices::add_prices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::engine::NormalizedItemPricing* _add = _internal_mutable_prices()->Add();
  // @@protoc_insertion_point(field_add:engine.UpdatedPrices.prices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::engine::NormalizedItemPricing>& UpdatedPrices::prices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:engine.UpdatedPrices.prices)
  return _internal_prices();
}
inline const ::google::protobuf::RepeatedPtrField<::engine::NormalizedItemPricing>&
UpdatedPrices::_internal_prices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prices_;
}
inline ::google::protobuf::RepeatedPtrField<::engine::NormalizedItemPricing>* PROTOBUF_NONNULL
UpdatedPrices::_internal_mutable_prices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.prices_;
}

// -------------------------------------------------------------------

// CalculatedFairValue

// string item_id = 1;
inline void CalculatedFairValue::clear_item_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CalculatedFairValue::item_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:engine.CalculatedFairValue.item_id)
  return _internal_item_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CalculatedFairValue::set_item_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:engine.CalculatedFairValue.item_id)
}
inline std::string* PROTOBUF_NONNULL CalculatedFairValue::mutable_item_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_item_id();
  // @@protoc_insertion_point(field_mutable:engine.CalculatedFairValue.item_id)
  return _s;
}
inline const std::string& CalculatedFairValue::_internal_item_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_id_.Get();
}
inline void CalculatedFairValue::_internal_set_item_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CalculatedFairValue::_internal_mutable_item_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.item_id_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CalculatedFairValue::release_item_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:engine.CalculatedFairValue.item_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.item_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.item_id_.Set("", GetArena());
  }
  return released;
}
inline void CalculatedFairValue::set_allocated_item_id(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.item_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.item_id_.IsDefault()) {
    _impl_.item_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:engine.CalculatedFairValue.item_id)
}

// double fair_value = 2;
inline void CalculatedFairValue::clear_fair_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fair_value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double CalculatedFairValue::fair_value() const {
  // @@protoc_insertion_point(field_get:engine.CalculatedFairValue.fair_value)
  return _internal_fair_value();
}
inline void CalculatedFairValue::set_fair_value(double value) {
  _internal_set_fair_value(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:engine.CalculatedFairValue.fair_value)
}
inline double CalculatedFairValue::_internal_fair_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fair_value_;
}
inline void CalculatedFairValue::_internal_set_fair_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fair_value_ = value;
}

// -------------------------------------------------------------------

// OrderbookFairValues

// repeated .engine.CalculatedFairValue fair_values = 1;
inline int OrderbookFairValues::_internal_fair_values_size() const {
  return _internal_fair_values().size();
}
inline int OrderbookFairValues::fair_values_size() const {
  return _internal_fair_values_size();
}
inline void OrderbookFairValues::clear_fair_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fair_values_.Clear();
}
inline ::engine::CalculatedFairValue* PROTOBUF_NONNULL OrderbookFairValues::mutable_fair_values(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:engine.OrderbookFairValues.fair_values)
  return _internal_mutable_fair_values()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::engine::CalculatedFairValue>* PROTOBUF_NONNULL OrderbookFairValues::mutable_fair_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:engine.OrderbookFairValues.fair_values)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_fair_values();
}
inline const ::engine::CalculatedFairValue& OrderbookFairValues::fair_values(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:engine.OrderbookFairValues.fair_values)
  return _internal_fair_values().Get(index);
}
inline ::engine::CalculatedFairValue* PROTOBUF_NONNULL OrderbookFairValues::add_fair_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::engine::CalculatedFairValue* _add = _internal_mutable_fair_values()->Add();
  // @@protoc_insertion_point(field_add:engine.OrderbookFairValues.fair_values)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::engine::CalculatedFairValue>& OrderbookFairValues::fair_values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:engine.OrderbookFairValues.fair_values)
  return _internal_fair_values();
}
inline const ::google::protobuf::RepeatedPtrField<::engine::CalculatedFairValue>&
OrderbookFairValues::_internal_fair_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fair_values_;
}
inline ::google::protobuf::RepeatedPtrField<::engine::CalculatedFairValue>* PROTOBUF_NONNULL
OrderbookFairValues::_internal_mutable_fair_values() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.fair_values_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace engine


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // pricing_2eproto_2epb_2eh
